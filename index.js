import { VK, Keyboard} from 'vk-io'
import express from 'express'
import config from './config/config.js'
import fs from 'fs'



//Load Server
const app = express()
const port = process.env.PORT || 3000

app.get('/', (req, res) => {
  res.send('<h1 styele="color: green">–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!</h1>')
})

app.listen(port, () => {
  console.log(`Example app listening on port ${port}`)
})

//VARIABLES
const vk = new VK({
    token: config.token,
})

let lvlCount = 0
let isSucc = false

//BUTTON
const builder = Keyboard.builder()
    .textButton({
        label: '–ù–∞—á–∞—Ç—å',
        payload: {
            command: 'start'
        },
        color: 'positive',
    })
    .textButton({
        label: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ',
        payload: {
            command: 'info'
        },
        color: 'secondary',
    })
    .row()
    .textButton({
        label: '–ü—Ä–æ—Ñ–∏–ª—å',
        payload: {
            command: 'profile',
        },
        color: 'negative',
    })

const nextButton = Keyboard.builder()  
    // .textButton({
    //     label: '–ù–∞–∑–∞–¥',
    //     payload: {
    //         command: 'true',
    //     },
    //     color: 'primary',
    // })
    .textButton({
        label: '–°–ª–µ–¥.',
        payload: {
            command: 'next',
        },
        color: 'positive',
    })
    .row()
    .textButton({
        label: "–ú–µ–Ω—é",
        payload: {
            command: 'menu',
        },
        color: 'negative',
    })

const creator = Keyboard.builder()
    .urlButton ({
        label: 'WhiteLord',
        url: 'https://vk.com/@white_lordz',
    })


//UPDATES
vk.updates.on('message_new', async context => {
    let [userData] = await vk.api.users.get({ user_id: context.senderId })

    if (context.text.toLowerCase() === '–ø—Ä–∏–≤–µ—Ç') {
        await context.send({
            message: `–ü—Ä–∏–≤–µ—Ç, ${userData.first_name}`,
            keyboard: builder,
        })
        fs.appendFileSync('./db/db.json', JSON.stringify({
            id: context.id,
            level: 0,
        }))
    }
    else if(context.text.toLowerCase() === '–Ω–∞—á–∞—Ç—å' && lvlCount > 0 && lvlCount < 2){
        if (lvlCount < 1) {
            lvlCount++
        }
        await context.send({
            message: `–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è
            –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ‚Äì —ç—Ç–æ ¬´–∏–º–µ–Ω–æ–≤–∞–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ¬ª –¥–ª—è –¥–∞–Ω–Ω—ã—Ö. –ú—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤, –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö.
            
            –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤ JavaScript –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ let.
            
            üìá 1 let message;
            üìá 2
            üìá 3
            –ü—Ä–∏–≤–µ–¥—ë–Ω–Ω–∞—è –≤—ã—à–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Å–æ–∑–¥–∞—ë—Ç (–¥—Ä—É–≥–∏–º–∏ —Å–ª–æ–≤–∞–º–∏: –æ–±—ä—è–≤–ª—è–µ—Ç –∏–ª–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç) –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –∏–º–µ–Ω–µ–º ¬´message¬ª.
            
            –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤ –Ω–µ—ë –¥–∞–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è =:
            üìá 1 let message;
            üìá 2 
            üìá 3 message = 'Hello'; // —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç—Ä–æ–∫—É 'Hello' –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å –∏–º–µ–Ω–µ–º message
            
            –°—Ç—Ä–æ–∫–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –æ–±–ª–∞—Å—Ç–∏ –ø–∞–º—è—Ç–∏, —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π. –ú—ã –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å –∫ –Ω–µ–π –¥–æ—Å—Ç—É–ø, –∏—Å–ø–æ–ª—å–∑—É—è –∏–º—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π:
            üìá 1 let message;
            üìá 2 message = 'Hello!';
            üìá 3 
            üìá 4 alert(message); // –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω —Å–ª–æ–≤–æ <<Hello!>>
            
            –î–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏ –º–æ–∂–Ω–æ —Å–æ–≤–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É:
            üìá 1 let message = 'Hello!'; // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ
            üìá 2 
            üìá 3 alert(message); // Hello!
            
            –ú—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ–º –æ–±—ä—è–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ:
            üìá 1 let user = 'John', age = 25, message = 'Hello';
            
            –¢–∞–∫–æ–π —Å–ø–æ—Å–æ–± –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å—Å—è –∫–æ—Ä–æ—á–µ, –Ω–æ –º—ã –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –µ–≥–æ. –î–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –æ–±—ä—è–≤–ª—è–π—Ç–µ –∫–∞–∂–¥—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ.

            –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –Ω–µ–º–Ω–æ–≥–æ –¥–ª–∏–Ω–Ω–µ–µ, –Ω–æ –ª–µ–≥—á–µ –¥–ª—è —á—Ç–µ–Ω–∏—è:
            üìá 1 let user = 'John';
            üìá 2 let age = 25;
            üìá 3 let message = 'Hello';
            
            –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ª—é–¥–∏ —Ç–∞–∫–∂–µ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Ç–∞–∫–æ–º –≤–æ—Ç –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–º —Å—Ç–∏–ª–µ:
            üìá 1 let user = 'John',
            üìá 2     age = 25,
            üìá 3     message = 'Hello';
                
            ‚Ä¶–ò–ª–∏ –¥–∞–∂–µ —Å –∑–∞–ø—è—Ç–æ–π –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫–∏:
            üìá 1 let user = 'John'
            üìá 2     , age = 25
            üìá 3     , message = 'Hello';
                
            –í –ø—Ä–∏–Ω—Ü–∏–ø–µ, –≤—Å–µ —ç—Ç–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ. –¢–∞–∫ —á—Ç–æ —ç—Ç–æ –≤–æ–ø—Ä–æ—Å –ª–∏—á–Ω–æ–≥–æ –≤–∫—É—Å–∞ –∏ —ç—Å—Ç–µ—Ç–∏–∫–∏.
            
            –ü–†–ò–ú–ï–ß–ê–ù–ò–ï: var –≤–º–µ—Å—Ç–æ let
            –í —Å—Ç–∞—Ä—ã—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö –≤—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –¥—Ä—É–≥–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: var –≤–º–µ—Å—Ç–æ let:
            
            var message = 'Hello';
            –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ var ‚Äì –ø–æ—á—Ç–∏ —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ let. –û–Ω–æ –æ–±—ä—è–≤–ª—è–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –Ω–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ-–¥—Ä—É–≥–æ–º—É, ¬´—É—Å—Ç–∞—Ä–µ–≤—à–∏–º¬ª —Å–ø–æ—Å–æ–±–æ–º.
            
            –ï—Å—Ç—å —Ç–æ–Ω–∫–∏–µ —Ä–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É let –∏ var, –Ω–æ –æ–Ω–∏ –ø–æ–∫–∞ –Ω–µ –∏–º–µ—é—Ç –¥–ª—è –Ω–∞—Å –∑–Ω–∞—á–µ–Ω–∏—è. –ú—ã –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –∏—Ö –≤ –≥–ª–∞–≤–µ –£—Å—Ç–∞—Ä–µ–≤—à–µ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ "var".`,
            keyboard: nextButton,
        })
        
    }

    else if(context.text.toLowerCase() === '—Å–ª–µ–¥.' && lvlCount == 1){
        await context.send({
            message: `–ó–∞–¥–∞–Ω–∏–µ: 
            –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –∏–º–µ–Ω–µ–º 'botName' –∏ –ø—Ä–∏—Å–≤–æ–∏—Ç—å –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ 'PlBots'
            
            P.S: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å —Ç–µ–∫—Å—Ç–æ–º –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –∫–∞–≤—ã—á–∫–∏(–¥–≤–æ–π–Ω—ã–µ "" –∏–ª–∏ –æ—Ä–¥–∏–Ω–∞—Ä–Ω—ã–µ ''), –∞ —Å —á–∏—Å–ª–æ–º –±–µ–∑ –∫–∞–≤—ã—á–µ–∫!`
        })
    }

    else if(context.text.toLowerCase() === "let botName = 'PlBots'"  || 'let botName = "PlBots"' && lvlCount == 1){
        lvlCount++
        isSucc = true
        await context.send({
            message: `–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
            +1üî•`
        })
    }

    else if(context.text.toLowerCase() === '–º–µ–Ω—é'){
        await context.send({
            message: '–ú–µ–Ω—é:',
            keyboard: builder,
        })
    }

    else if(context.text.toLowerCase() === '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ'){
        await context.send({
            message: `–°–æ–∑–¥–∞—Ç–µ–ª—å: [vk.com/@white_lordz|WhiteLord]
            
            üìá - –°—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞.
            üî• - –ü–æ–∫–∞–∑–∞—Ç–µ–ª—å —É—Ä–æ–≤–Ω—è.
            üòé - –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.`,
            keyboard: creator.inline(),
        })

    }
    else if(context.text.toLowerCase() === '–ø—Ä–æ—Ñ–∏–ª—å'){
        await context.send({
            message: `‚úÖ –ü—Ä–æ—Ñ–∏–ª—å:
-----------------------------------------
üòé –ò–º—è: ${userData.first_name} ${userData.last_name}
-----------------------------------------
üî• –£—Ä–æ–≤–µ–Ω—å: ${lvlCount}`,
        })

    }

    else{
        await context.send('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!')
    }

})

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!')
await vk.updates.start();